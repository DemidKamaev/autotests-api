import asyncio

import websockets
from websockets import ServerConnection


async def echo(websocket: ServerConnection):  # websocket имеет тип ServerConnection
    async for message in websocket:  # Для каждого сообщения, полученного этим вебсокетом
        # # Здесь обмен данными идет в виде строк, либо ввиде байтов.
        # Мы можем выполнять какое действие
        print(f"Получено сообщение: {message}")  # пишем то сообщение, которое получили от клиента
        response = f"Сервер получил: {message}" # формируем респонс и пишем, какое сообщение получил сервер

        for _ in range(5):
            await websocket.send(response)  # И мы можем ответить клиенту через объект websocket, выполним send
        # и отправить какой либо текст в виде строки(отравить какой-то response)

        # Даже если клиент отправил json, мы все равно получаем строку, байты
        # Если мы хотим работать с json, значит необходимо его распарсить именно в json

        # *Это по факту есть наш небольшой сервер
        # Мы запускаем бесконечный цикл, который читает асинхронно сообщения от клиента
        # Печает их в лог, формирует ответ ( что сервер получил такое-то сообщение)
        # Отправляет его клиенту


async def main():  # Запускает наш сервер
    server = await websockets.serve(echo, "localhost", 8765)
    print("Websocket сервер запущен на ws://localhost:8765")
    await server.wait_closed()

asyncio.run(main())

"""
1. Функция обработчик echo(), она принимает объект ServerConnection
и асинхронно здесь вычитывает сообщения, которые мы получаем от клиента
и отправляем ответ клиенту (можем отправлять несколько ответов)

2. Функция main(), которая инициализирует сам сервер
Печает в лог, что сервер запущен на хосте
И запускает сервер до тех пор, пока он не будет закрыт
через Cntr S или через отстановку самого процесса
"""
